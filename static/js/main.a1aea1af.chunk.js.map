{"version":3,"sources":["Feed/FeedItem.jsx","services/url.js","services/auth.js","services/feed.js","Feed/Feed.jsx","Nav.jsx","services/article.js","shared/Form.jsx","Article/ArticleForm.jsx","Article/ArticleUpdate.jsx","Article/ArticleEdit.jsx","Article/Article.jsx","Main.jsx","User/SignInForm.jsx","User/SignIn.jsx","User/NewUserForm.jsx","User/NewUser.jsx","App.jsx","index.js"],"names":["Item","styled","article","StyledLink","Link","FeedArticle","split","map","line","index","key","toString","FeedItem","id","title","feedType","authorName","createdOn","content","to","data-testid","src","alt","Date","toLocaleString","uri","login","a","email","password","loginUrl","url","fetch","method","body","JSON","stringify","headers","response","json","status","error","createUser","firstName","lastName","gender","jobRole","department","address","Headers","token","window","localStorage","getItem","setUser","setItem","payload","jwtDecode","getUser","parse","getToken","getAll","feedUrl","authService","FeedDisplay","feed","data","feedItem","FeedContainer","main","FeedHeader","h1","Feed","useState","isLoading","setIsLoading","setFeed","useEffect","feedService","serverFeed","fetchFeed","length","NavContainer","nav","NavGroup","ul","NavItem","li","StyledNavLink","NavLink","attrs","activeClassName","Nav","createArticle","articleUrl","updateArticle","articleId","getArticle","FormContainer","FormHeader","h2","Form","form","InputLabel","label","Input","input","TextArea","textarea","Submit","ArticleForm","handleChange","handleSubmit","state","isUpdate","onSubmit","htmlFor","type","placeholder","onChange","value","required","ArticleUpdateWithHistory","withRouter","notify","history","console","log","inputState","setInputState","setError","articleService","warn","fetchArticleToUpdate","event","preventDefault","includes","clear","push","message","target","ArticleEditWithHistory","ArticleDisplay","Article","setArticle","serverArticle","fetchArticle","Main","path","component","render","match","params","SignInForm","SignInWithHistory","cleanState","NewUserForm","NewUserWithHistory","toast","configure","autoClose","draggable","App","notification","setNotification","info","resolveRoute","expiration","exp","now","dept","err","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a1aea1af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nconst Item = styled.article`\n  min-height: 40px;\n  min-width: 80%;\n  padding: 2em;\n  background-color: #bc4873;\n  margin-bottom: 3em;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  &:visited {\n    color: inherit;\n  }\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst FeedItem = ({\n  id, title, feedType, authorName, createdOn, content,\n}) => (\n  <StyledLink to={`/${feedType === 'article' ? 'articles' : 'gifs'}/${id}`}>\n    <Item data-testid=\"feed-item\">\n      <header>\n        <h3>{title}</h3>\n      </header>\n      <main>\n        { feedType === 'article'\n          ? <FeedArticle article={content} />\n          : <img src={content} alt={title} />}\n      </main>\n      <footer>\n        <address>\n          {authorName}\n          <time>{(new Date(createdOn)).toLocaleString()}</time>\n        </address>\n      </footer>\n    </Item>\n  </StyledLink>\n);\n\nconst FeedArticle = ({ article }) => {\n  const lines = article.split('\\n');\n  return lines.map((line, index) => <p key={index.toString()}>{line}</p>);\n};\n\nFeedItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  feedType: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  createdOn: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default FeedItem;\n","const BASE_URL = 'https://nameless-spire-94806.herokuapp.com/api/v1';\n\nexport default (uri) => `${BASE_URL}${uri}`;\n","import * as jwtDecode from 'jwt-decode';\nimport url from './url';\n\nconst login = async ({ email, password }) => {\n  const loginUrl = url('/auth/signin');\n\n  try {\n    const response = await fetch(loginUrl, {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return response.json();\n  } catch (err) {\n    return { status: 'error', error: 'unable to login, please try again' };\n  }\n};\n\nconst createUser = async ({\n  firstName, lastName, email, password, gender, jobRole, department, address,\n}) => {\n  const loginUrl = url('/auth/create-user');\n\n  try {\n    const response = await fetch(loginUrl, {\n      method: 'POST',\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password,\n        gender,\n        jobRole,\n        department,\n        address,\n      }),\n      headers: new Headers({\n        token: window.localStorage.getItem('token'),\n        'Content-Type': 'application/json',\n      }),\n    });\n\n    return response.json();\n  } catch (err) {\n    return { status: 'error', error: 'unable to login, please try again' };\n  }\n};\n\nconst setUser = (token) => {\n  window.localStorage.setItem('token', token);\n  const payload = jwtDecode(token);\n  window.localStorage.setItem('user', JSON.stringify(payload));\n};\n\nconst getToken = () => window.localStorage.getItem('token');\n\nconst getUser = () => JSON.parse(window.localStorage.getItem('user'));\n\nexport default {\n  login,\n  createUser,\n  setUser,\n  getUser,\n  getToken,\n};\n","import url from './url';\nimport authService from './auth';\n\nconst getAll = async () => {\n  const feedUrl = url('/feed');\n\n  try {\n    const token = authService.getToken();\n    const response = await fetch(feedUrl, {\n      method: 'GET',\n      headers: new Headers({\n        token,\n      }),\n    });\n\n    return response.json();\n  } catch (err) {\n    return { status: 'error', error: 'unable to get feeds' };\n  }\n};\n\nexport default { getAll };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport FeedItem from './FeedItem';\nimport feedService from '../services/feed';\n\nconst FeedDisplay = ({ feed }) => (\n  feed.status === 'error'\n    ? <p>{feed.error}</p>\n    : feed.data.map((feedItem) => (\n      <FeedItem\n        key={feedItem.id}\n        id={feedItem.id}\n        createdOn={feedItem.createdOn}\n        title={feedItem.title}\n        authorName={feedItem.authorName}\n        feedType={feedItem.article ? 'article' : 'gif'}\n        content={feedItem.article || feedItem.url}\n      />\n    ))\n);\n\nFeedDisplay.propTypes = {\n  feed: PropTypes.shape({\n    status: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      createdOn: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      authorName: PropTypes.string.isRequired,\n      article: PropTypes.string,\n      url: PropTypes.string,\n    }).isRequired).isRequired,\n  }).isRequired,\n};\n\nconst FeedContainer = styled.main`\n  min-height: 80vh;\n`;\n\nconst FeedHeader = styled.h1`\n  margin-bottom: 5em;\n`;\n\nconst Feed = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [feed, setFeed] = useState([]);\n\n  useEffect(() => {\n    const fetchFeed = async () => {\n      try {\n        const serverFeed = await feedService.getAll();\n        setFeed(serverFeed);\n        setIsLoading(false);\n      } catch (err) {\n        setFeed({ status: 'error', error: 'Unable to get feed' });\n        setIsLoading(false);\n      }\n    };\n    fetchFeed();\n  }, []);\n\n  return (\n    <FeedContainer>\n      <header>\n        <FeedHeader>Feed</FeedHeader>\n      </header>\n      <main>\n        { feed.data && feed.data.length === 0 && !isLoading && <p>Nothing here at the moment</p>}\n        { isLoading\n          ? <p>Loading feeds</p>\n          : <FeedDisplay feed={feed} />}\n      </main>\n    </FeedContainer>\n  );\n};\n\n\nexport default Feed;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst NavContainer = styled.nav`\n  max-width:100vw;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 30%;\n`;\n\nconst NavGroup = styled.ul`\n  list-style-type: none;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst NavItem = styled.li`\n  margin-right: 1em;  \n`;\nconst activeClassName = 'active';\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName,\n})`\n  text-decoration: none;\n  &.${activeClassName} {\n    border-bottom: 1.5px solid white;\n  }\n\n  &:visited {\n    color: inherit;\n  }\n\n  &:hover {\n    text-decoration: none;\n  }\n  `;\n\nconst Nav = () => (\n  <NavContainer>\n    <NavGroup>\n      <NavItem><StyledNavLink to=\"/feed\">feed</StyledNavLink></NavItem>\n      <NavItem><StyledNavLink to=\"/articles/new\">New Article</StyledNavLink></NavItem>\n    </NavGroup>\n  </NavContainer>\n);\n\nexport default Nav;\n","import url from './url';\nimport authService from './auth';\n\nconst createArticle = async ({ title, article }) => {\n  const articleUrl = url('/articles');\n  const token = authService.getToken();\n\n  try {\n    const response = await fetch(articleUrl, {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        article,\n      }),\n      headers: new Headers({\n        token,\n        'Content-Type': 'application/json',\n      }),\n    });\n\n    return response.json();\n  } catch (err) {\n    return { status: 'error', error: 'unable to post article' };\n  }\n};\n\nconst updateArticle = async ({ title, article, articleId }) => {\n  const articleUrl = url(`/articles/${articleId}`);\n  const token = authService.getToken();\n\n  try {\n    const response = await fetch(articleUrl, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        title,\n        article,\n      }),\n      headers: new Headers({\n        token,\n        'Content-Type': 'application/json',\n      }),\n    });\n\n    return response.json();\n  } catch (err) {\n    return { status: 'error', error: 'An error occured while updating the article' };\n  }\n};\n\nconst getArticle = async (articleId) => {\n  const articleUrl = url(`/articles/${articleId}`);\n  const token = authService.getToken();\n\n  try {\n    const response = await fetch(articleUrl, {\n      method: 'GET',\n      headers: new Headers({\n        token,\n      }),\n    });\n\n    return response.json();\n  } catch (err) {\n    return { status: 'error', error: 'An error occured retrieving the article' };\n  }\n};\n\nexport default { createArticle, updateArticle, getArticle };\n","import styled from 'styled-components';\n\nconst FormContainer = styled.main`\n  max-width: 768px;\n  height: auto;\n  padding: 1.5em;\n  background-color: inherit;\n`;\nconst FormHeader = styled.h2`\n  color: #d4d0c7;\n  margin-bottom: 2em;\n`;\n\nconst Form = styled.form`\n  margin-top: 1em;\n  width: 80%;\n  background-color: inherit;\n`;\n\nconst InputLabel = styled.label`\n  font-size: 1.5em;\n  text-transform: uppercase;\n  color: #edebe6;\n`;\n\nconst Input = styled.input`\n  display: block;\n  padding: 1em;\n  margin-bottom: 1.5em;\n  width: 100%;\n  border: none;\n  border-bottom: solid 1px #726582;\n  background-color: inherit;\n  color: #edebe6;\n  &::placeholder {\n    color: #d4d0c7;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  display: block;\n  padding: 1em;\n  margin-bottom: 1.5em;\n  width: 100%;\n  border: none;\n  border-bottom: solid 1px #726582;\n  background-color: inherit;\n  color: #edebe6;\n  &::placeholder {\n    color: #d4d0c7;\n  }\n`;\n\nconst Submit = styled.input`\n  padding: 1em; \n  border: 1px solid #726582;\n  background-color: inherit;\n  color: #edebe6;\n  transition: .4s;\n  width: 40%;\n  &:hover {\n    background-color: #edebe6;\n    color: #41295a;\n  }\n`;\n\nexport {\n  FormContainer,\n  FormHeader,\n  Form,\n  InputLabel,\n  Input,\n  TextArea,\n  Submit,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  FormContainer, FormHeader, Form, InputLabel, Input, TextArea, Submit,\n} from '../shared/Form';\n\nconst ArticleForm = ({\n  handleChange, handleSubmit, state, isUpdate,\n}) => (\n  <FormContainer>\n    <FormHeader>New Article</FormHeader>\n    <Form data-testid=\"articleForm\" onSubmit={handleSubmit}>\n      <InputLabel htmlFor=\"title\">\n      Title\n        <Input\n          data-testid=\"title\"\n          id=\"title\"\n          type=\"text\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          value={state.title}\n          required\n        />\n      </InputLabel>\n\n      <InputLabel htmlFor=\"article\">\n      Article\n        <TextArea\n          data-testid=\"article\"\n          id=\"article\"\n          placeholder=\"Article\"\n          onChange={handleChange}\n          value={state.article}\n          required\n        >\n          {state.value}\n        </TextArea>\n      </InputLabel>\n\n      <Submit data-testid=\"submit-button\" type=\"submit\" value={isUpdate ? 'Update' : 'Post'} />\n    </Form>\n  </FormContainer>\n);\n\nArticleForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  state: PropTypes.objectOf(PropTypes.string).isRequired,\n  isUpdate: PropTypes.bool.isRequired,\n};\n\nexport default ArticleForm;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport articleService from '../services/article';\nimport ArticleForm from './ArticleForm';\n\nconst ArticleUpdate = ({ notify, history, articleId }) => {\n  console.log('id', articleId)\n  const cleanState = {\n    title: '',\n    article: '',\n  };\n\n  const [inputState, setInputState] = useState(cleanState);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArticleToUpdate = async () => {\n      try {\n        const response = await articleService.getArticle(articleId);\n        if (response.status === 'error') {\n          console.log('neigh', response.error)\n          setError(response.error);\n        } else {\n          console.log('yay', response.data);\n          setInputState({\n            title: response.data.title,\n            article: response.data.article,\n          });\n        }\n      } catch (error) {\n        console.warn(error);\n        setError('An error occured retrieving the article');\n      }\n    };\n\n    fetchArticleToUpdate();\n  }, [articleId]);\n\n  const handleChange = (event) => {\n    setInputState({\n      ...inputState,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await articleService.updateArticle({ ...inputState, articleId });\n      if (response.status === 'error' && response.error.includes('expire')) {\n      // expired token, redirect to login page\n        notify(response.error);\n        window.localStorage.clear();\n        history.push('/signin');\n      } else if (response.status === 'success') {\n        notify(response.data.message);\n        history.push(`/articles/${articleId}`);\n      }\n    } catch (error) {\n      notify('cannot submit your input');\n    }\n  };\n\n  return error\n    ? <p>{error}</p>\n    : <ArticleForm handleChange={handleChange} handleSubmit={handleSubmit} state={inputState} isUpdate />;\n};\n\nArticleUpdate.propTypes = {\n  notify: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.func).isRequired,\n  articleId: PropTypes.number.isRequired,\n};\n\nconst ArticleUpdateWithHistory = withRouter(ArticleUpdate);\n\nexport default ArticleUpdateWithHistory;\n\n// for testing\nexport { ArticleUpdate };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport articleService from '../services/article';\nimport ArticleForm from './ArticleForm';\n\nconst ArticleEdit = ({ notify, history }) => {\n  const cleanState = {\n    title: '',\n    article: '',\n  };\n\n  const [inputState, setInputState] = useState(cleanState);\n\n  const handleChange = (event) => {\n    setInputState({\n      ...inputState,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await articleService.createArticle(inputState);\n      if (response.status === 'error' && response.error.includes('expire')) {\n      // expired token, redirect to login page\n        notify(response.error);\n        window.localStorage.clear();\n        history.push('/signin');\n      } else if (response.status === 'success') {\n        notify(response.data.message);\n        history.push(`/articles/${response.data.articleId}`);\n      }\n    } catch (error) {\n      notify('cannot submit your input');\n    }\n  };\n\n  return <ArticleForm handleChange={handleChange} handleSubmit={handleSubmit} state={inputState} isUpdate={false} />;\n};\n\nArticleEdit.propTypes = {\n  notify: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nconst ArticleEditWithHistory = withRouter(ArticleEdit);\n\nexport default ArticleEditWithHistory;\n\n// for testing\nexport { ArticleEdit };\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FeedItem from '../Feed/FeedItem';\nimport articleService from '../services/article';\n\nconst ArticleDisplay = ({ article }) => (\n  article.status === 'error'\n    ? <p>{article.error}</p>\n    : (\n      <FeedItem\n        id={article.data.id}\n        createdOn={article.data.createdOn}\n        title={article.data.title}\n        authorName={article.data.authorName}\n        feedType={article.data.article ? 'article' : 'gif'}\n        content={article.data.article || article.data.url}\n      />\n    )\n);\n\nArticleDisplay.propTypes = {\n  article: PropTypes.shape({\n    status: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    data: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      createdOn: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      authorName: PropTypes.string.isRequired,\n      article: PropTypes.string,\n      url: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nconst Article = ({ articleId, notify }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [article, setArticle] = useState([]);\n\n  useEffect(() => {\n    const fetchArticle = async () => {\n      try {\n        const serverArticle = await articleService.getArticle(articleId);\n        setArticle(serverArticle);\n        setIsLoading(false);\n      } catch (err) {\n        notify('Unable to get feed');\n        setArticle({ status: 'error', error: 'Unable to get article' });\n        setIsLoading(false);\n      }\n    };\n    fetchArticle();\n  }, [articleId, notify]);\n\n  return (\n    <main>\n      { isLoading\n        ? <p>Loading articles</p>\n        : <ArticleDisplay article={article} />}\n    </main>\n  );\n};\n\nArticle.propTypes = {\n  articleId: PropTypes.number.isRequired,\n  notify: PropTypes.func.isRequired,\n};\n\nexport default Article;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Feed from './Feed/Feed';\nimport Nav from './Nav';\nimport ArticleUpdateWithHistory from './Article/ArticleUpdate';\nimport ArticleEditWithHistory from './Article/ArticleEdit';\nimport Article from './Article/Article';\n\n\nconst Main = ({ notify }) => (\n  <>\n    <Nav />\n    <main>\n      <Switch>\n        <Route path=\"/feed\" component={Feed} />\n        <Route path=\"/articles/new\" render={() => <ArticleEditWithHistory notify={notify} />} />\n        <Route path=\"/articles/:articleId\" render={({ match }) => <Article articleId={+match.params.articleId} notify={notify} />} />\n        <Route path=\"/articles/:articleId/edit\" render={({ match }) => <ArticleUpdateWithHistory articleId={+match.params.articleId} notify={notify} />} />\n      </Switch>\n    </main>\n  </>\n);\n\nMain.propTypes = {\n  notify: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  FormContainer, FormHeader, Form, InputLabel, Input, Submit,\n} from '../shared/Form';\n\nconst SignInForm = ({ handleChange, handleSubmit, state }) => (\n  <FormContainer>\n    <FormHeader>Sign In</FormHeader>\n    <Form data-testid=\"signinForm\" onSubmit={handleSubmit}>\n      <InputLabel htmlFor=\"email\">\n        Email\n        <Input\n          data-testid=\"email\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={handleChange}\n          value={state.email}\n          required\n        />\n      </InputLabel>\n\n      <InputLabel htmlFor=\"password\">\n        Password\n        <Input\n          data-testid=\"password\"\n          id=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChange}\n          value={state.password}\n          required\n        />\n      </InputLabel>\n\n      <Submit data-testid=\"submit-button\" type=\"submit\" value=\"Sign In\" />\n    </Form>\n  </FormContainer>\n);\n\nSignInForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default SignInForm;\n","\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport authService from '../services/auth';\nimport SignInForm from './SignInForm';\n\nconst SignIn = ({ notify, history }) => {\n  const cleanState = {\n    email: '',\n    password: '',\n  };\n\n  const [inputState, setInputState] = useState(cleanState);\n\n  const handleChange = (event) => {\n    setInputState({\n      ...inputState,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await authService.login(inputState);\n      if (response.status === 'success') {\n        authService.setUser(response.data.token);\n        notify('Welcome');\n        history.push('/feed');\n      } else if (response.status === 'error') {\n        notify(response.error);\n        setInputState(cleanState);\n      }\n    } catch (error) {\n      console.warn(error);\n      notify('cannot submit your input');\n    }\n  };\n\n  return <SignInForm handleChange={handleChange} handleSubmit={handleSubmit} state={inputState} />;\n};\n\nSignIn.propTypes = {\n  notify: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nconst SignInWithHistory = withRouter(SignIn);\n\nexport default SignInWithHistory;\n\n// for testing\nexport { SignIn };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  FormContainer, FormHeader, Form, InputLabel, Input, Submit,\n} from '../shared/Form';\n\nconst NewUserForm = ({ handleChange, handleSubmit, state }) => (\n  <FormContainer>\n    <FormHeader>Create new Employee profile</FormHeader>\n    <Form data-testid=\"newUserForm\" onSubmit={handleSubmit}>\n      <InputLabel htmlFor=\"firstName\">\n        First Name\n        <Input\n          data-testid=\"firstName\"\n          id=\"firstName\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          onChange={handleChange}\n          value={state.firstName}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"lastName\">\n        Last Name\n        <Input\n          data-testid=\"lastName\"\n          id=\"lastName\"\n          type=\"text\"\n          placeholder=\"Last Name\"\n          onChange={handleChange}\n          value={state.lastName}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"email\">\n        Email\n        <Input\n          data-testid=\"email\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={handleChange}\n          value={state.email}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"password\">\n        Password\n        <Input\n          data-testid=\"password\"\n          id=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChange}\n          value={state.password}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"gender\">\n        Gender\n        <Input\n          data-testid=\"gender\"\n          id=\"gender\"\n          type=\"text\"\n          placeholder=\"Gender\"\n          onChange={handleChange}\n          value={state.gender}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"jobRole\">\n        Job Role\n        <Input\n          data-testid=\"jobRole\"\n          id=\"jobRole\"\n          type=\"text\"\n          placeholder=\"Job Role\"\n          onChange={handleChange}\n          value={state.jobRole}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"department\">\n        Department\n        <Input\n          data-testid=\"department\"\n          id=\"department\"\n          type=\"text\"\n          placeholder=\"Department\"\n          onChange={handleChange}\n          value={state.department}\n          required\n        />\n      </InputLabel>\n      <InputLabel htmlFor=\"address\">\n        Address\n        <Input\n          data-testid=\"address\"\n          id=\"address\"\n          type=\"text\"\n          placeholder=\"Address\"\n          onChange={handleChange}\n          value={state.address}\n          required\n        />\n      </InputLabel>\n\n      <Submit data-testid=\"submit-button\" type=\"submit\" value=\"Create\" />\n    </Form>\n  </FormContainer>\n);\n\nNewUserForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    jobRole: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default NewUserForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport authService from '../services/auth';\nimport NewUserForm from './NewUserForm';\n\nconst NewUser = ({ notify, history }) => {\n  const cleanState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    gender: '',\n    jobRole: '',\n    department: '',\n    address: '',\n  };\n\n  const [inputState, setInputState] = useState(cleanState);\n\n  const handleChange = (event) => {\n    setInputState({\n      ...inputState,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await authService.createUser(inputState);\n      if (response.status === 'error' && response.error.includes('expire')) {\n      // expired token, redirect to login page\n        notify(response.error);\n        window.localStorage.clear();\n        history.push('/signin');\n      } else if (response.status === 'success') {\n        notify(response.data.message);\n        setInputState(cleanState);\n      }\n    } catch (error) {\n      notify('cannot submit your input');\n    }\n  };\n\n  return <NewUserForm handleChange={handleChange} handleSubmit={handleSubmit} state={inputState} />;\n};\n\nNewUser.propTypes = {\n  notify: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nconst NewUserWithHistory = withRouter(NewUser);\n\nexport default NewUserWithHistory;\n\n// for testing\nexport { NewUser };\n","import React, { useState } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport * as jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'normalize.css';\n\nimport Main from './Main';\nimport SignInWithHistory from './User/SignIn';\nimport NewUserWithHistory from './User/NewUser';\n\ntoast.configure({\n  autoClose: 3000,\n  draggable: false,\n});\n\nconst isExpiredToken = (expiration) => {\n  const bestBefore = new Date(expiration * 1000);\n  return bestBefore - Date.now() < 0;\n};\n\nconst App = () => {\n  const [notification, setNotification] = useState('');\n  if (notification) {\n    toast.info(notification);\n    setNotification(null);\n  }\n\n\n  const resolveRoute = () => {\n    const token = window.localStorage.getItem('token');\n    if (!token) {\n      setNotification('You have to log in first');\n      return <Redirect to=\"/signin\" />;\n    }\n    try {\n      const payload = jwtDecode(token);\n      if (isExpiredToken(payload.exp)) {\n        window.localStorage.clear();\n        return <Redirect to=\"/signin\" />;\n      }\n      if (payload.dept === 'admin') {\n        return <NewUserWithHistory notify={setNotification} />;\n      }\n      return <Main notify={setNotification} />;\n    } catch (err) {\n      return <Redirect to=\"/signin\" />;\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path=\"/signin\" render={() => <SignInWithHistory notify={setNotification} />} />\n      <Route exact path=\"/\" render={resolveRoute} />\n      <Route exact path=\"/new-user\" render={resolveRoute} />\n      <Route path=\"/feed\" render={resolveRoute} />\n      <Route path=\"/articles/new\" render={resolveRoute} />\n      <Route path=\"/articles/:articleId\" render={resolveRoute} />\n      <Route path=\"/articles/:articleId/edit\" render={resolveRoute} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}